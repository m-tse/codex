# DEPRECATED: Use iterm's native tmux integration instead of learning this stuff.
# Ways to get mouse selection, copy, paste, scrolling to work with tmux.
# - Simply turning on `set -g mouse on` will enable mouse selection, mouse scrolling, and is native. However, it is
#   tmux's own internal mouse selection interface, which doesn't cleanly interact with the OS terminal. Therefore,
#   selecting something will not allow me to copy/paste. 
# - I can disable mouse mode, but then you cannot scroll up with the mouse wheel, annoying!
# - Some terminals allow a special key to override selections. In linux/putty, it's `shift`, in macOS' terminal.app,
#   it's `Fn` (however my custom keyboard cannot mimick that key), in iterm2, it's `option`. But even if I did that,
#   it's very annoying to have to remember to hold a key to highlight text.
# - https://unix.stackexchange.com/a/318285 offers a really great workaround on macOS and linux which pipes tmux copy
#   commands into xclip (linux) and pbcopy (macOS), however this only works for tmux running on the native system, not 
#   tmux on a server that you're SSH'd into.
# - https://superuser.com/a/314620 offers a hack that tricks the terminal into offering a few lines of scroll, but it
#   sorta falls apart when you switch between tmux panes.
#
# Suffice to say, these all really suck.
# The best solution with fewest sacrifices is to use iterm2's native tmux integration. It does away with all tmux
# commands and weirdness. It basically translates a tmux session into an iterm tab (or window). There's no tmux status
# bar anymore. Check it out:
# https://www.iterm2.com/documentation-tmux-integration.html
# https://gitlab.com/gnachman/iterm2/-/wikis/tmux-Integration-Best-Practices
# Basic usage: SSH into target machine, run `tmux -CC attach`.

# remap prefix from 'Ctrl-b' to
unbind C-b
set-option -g prefix C-x
bind-key C-x send-prefix

# Change interface colors (copy mode highlighting) to "normal white" foreground on "bright black" background.
set-window-option -g mode-style "fg=colour7,bg=colour8"

# Use emacs style shell navigation (^A ^E ^B ^F, etc.). This is required since EDITOR=vi.
# See https://stackoverflow.com/questions/18240683/how-to-force-emacs-style-status-keys-in-tmux/39520371
set-option -g status-keys emacs

# Set larger history
set-option -g history-limit 10000

# Allow mouse scrolling, and allow mouse click
set -g mouse on

# Set a dark grey status line.
set-option -g status-bg colour234 # A dark grey RGB(38, 38, 38)
set-option -g status-fg colour3 # ANSI yellow

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
# Set the left status to CPU and RAM.
set -g status-left '#{cpu_fg_color}CPU:#{cpu_percentage} #{ram_fg_color}MEM:#{ram_percentage}'
# Set the right status to a grey clock with UTC and white clock with local time zone.
set -g status-right '#[fg=colour244]#(TZ="UTC" date +"%m-%d %%H:%%M")U|#[fg=colour15]#(TZ="US/Eastern" date +"%m-%d %%H:%%M:%%S")E'

# Index windows starting at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Use vim style pane navigation.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Command for reloading config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

run-shell ~/Development/codex/posix/submodules/tmux-cpu/cpu.tmux
